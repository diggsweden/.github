# SPDX-FileCopyrightText: 2024 Digg - Agency for Digital Government
#
# SPDX-License-Identifier: CC0-1.0

# NPM Application Publisher for GitHub Registry
# 
# Purpose: Builds and publishes NPM applications to GitHub Packages registry with
# support for scoped packages, dist-tags, and automated version management.
#
# How it works:
# 1. Sets up specified Node.js version
# 2. Configures NPM for GitHub Packages registry
# 3. Installs dependencies with npm ci (clean install)
# 4. Runs build script if present
# 5. Runs tests if configured
# 6. Publishes package with specified dist-tag
# 7. Uploads dist files as workflow artifacts
#
# Security controls:
# - Uses NPM_TOKEN for authenticated publishing
# - Validates package.json before publishing
# - Supports 2FA if configured on registry
# - Scoped packages for namespace isolation
#
# Required Secrets:
#   NPM_TOKEN: GitHub Packages token with write:packages scope
#   GITHUB_TOKEN: For authentication (automatic)
#
# Required Permissions:
#   contents: read   # Read source code
#   packages: write  # Publish to GitHub NPM registry
#
# Generated Artifacts:
#   - *.tgz: NPM package tarball (uploaded as workflow artifact)
#   - Published package in GitHub Packages registry
#
# NPM Configuration:
#   - Supports scoped packages (@org/package)
#   - Dist-tags for version channels (latest, next, beta)
#   - Respects .npmrc configuration
#   - Caches node_modules for faster builds
---
name: Publish NPM Application to GitHub

on:
  workflow_call:
    inputs:
      nodeVersion:
        description: "Node.js version"
        required: true
        type: string
      workingDirectory:
        description: "Working directory"
        required: false
        default: "."
        type: string
      npmTag:
        description: "NPM publish tag"
        required: false
        default: "latest"
        type: string
      branch:
        description: "Branch to checkout"
        required: false
        default: "main"
        type: string

permissions:
  contents: read  # Best Security practice. Jobs only get read as base, and then permissions are added as needed

jobs:
  publish-npm-app:
    name: Publish NPM Application
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ inputs.nodeVersion }}
          registry-url: "https://npm.pkg.github.com"
          cache: 'npm'

      - name: Install dependencies
        working-directory: ${{ inputs.workingDirectory }}
        run: npm ci

      - name: Run tests
        working-directory: ${{ inputs.workingDirectory }}
        run: npm test || echo "No tests configured"

      - name: Build application
        working-directory: ${{ inputs.workingDirectory }}
        run: |
          if grep -q '"build"' package.json; then
            echo "Running build script..."
            npm run build
          fi

      - name: Determine publish tag
        id: tag
        run: |
          TAG="${{ inputs.npmTag }}"
          VERSION="${{ github.ref_name }}"
          
          # Auto-detect prerelease tags
          if [[ "$VERSION" =~ -alpha\. ]]; then TAG="alpha"; fi
          if [[ "$VERSION" =~ -beta\. ]]; then TAG="beta"; fi
          if [[ "$VERSION" =~ -rc\. ]]; then TAG="rc"; fi
          
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Publishing with tag: $TAG"

      - name: Publish to GitHub Packages
        working-directory: ${{ inputs.workingDirectory }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Ensure scoped package name for GitHub Packages
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          if [[ "$PACKAGE_NAME" != @* ]]; then
            echo "Package must be scoped for GitHub Packages"
            npm config set @${{ github.repository_owner }}:registry https://npm.pkg.github.com
          fi
          
          npm publish --tag ${{ steps.tag.outputs.tag }}

      - name: Pack NPM tarball
        working-directory: ${{ inputs.workingDirectory }}
        run: |
          echo "Creating NPM package tarball..."
          npm pack
          
          # List the created tarball for verification
          ls -lh *.tgz

      - name: Upload NPM artifacts for other jobs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: npm-artifacts
          path: |
            ${{ inputs.workingDirectory }}/*.tgz
          retention-days: 1

      - name: Generate build summary
        run: |
          echo "## NPM Application Build Summary ðŸ“¦" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Node Version:** ${{ inputs.nodeVersion }}" >> $GITHUB_STEP_SUMMARY
          echo "- **NPM Tag:** ${{ steps.tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Published to:" >> $GITHUB_STEP_SUMMARY
          echo "- GitHub Packages: \`@${{ github.repository }}\`" >> $GITHUB_STEP_SUMMARY